{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of AquaTrack app"
  },
  "servers": [
    {
      "url": "http://localhost:3003"
    },
    {
      "url": "https://aqua-app-teamwork.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "AquaTrack",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "User",
      "description": "Operations about users."
    },
    {
      "name": "Water",
      "description": "Operations about water consumption."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Registers a new user with the provided details.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User successfully registered"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/401"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/401"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "operationId": "loginUser",
        "description": "Authenticates a user and returns a JWT token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "JWT access token"
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "JWT refresh token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/401"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout a user",
        "operationId": "logoutUser",
        "description": "Logs out the user by invalidating the session or token.",
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully logged out"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/401"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Refreshes the user's access token using a refresh token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "New JWT access token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/401"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Get User Info",
        "operationId": "getUser",
        "description": "Retrieve the current user's information.",
        "responses": {
          "200": {
            "description": "Successfully retrieved user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "alexboo@example.com"
                        },
                        "name": {
                          "type": "string",
                          "example": "Alex Boo"
                        },
                        "gender": {
                          "type": "string",
                          "enum": [
                            "male",
                            "female"
                          ],
                          "example": "male"
                        },
                        "weight": {
                          "type": "number",
                          "example": 75
                        },
                        "dailyTimeActivity": {
                          "type": "number",
                          "example": 60
                        },
                        "dailyNorma": {
                          "type": "number",
                          "example": 2
                        },
                        "avatar": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://res.cloudinary.com/dztvd7emk/image/upload/v1722795504/xxkv5fjuoqma9hsn7qbc.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Update User Info",
        "operationId": "patchUser",
        "description": "Update the current user's information.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Alex Boo"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "alexboo@example.com"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ],
                    "example": "male"
                  },
                  "weight": {
                    "type": "number",
                    "example": 75
                  },
                  "dailyTimeActivity": {
                    "type": "number",
                    "example": 60
                  },
                  "dailyNorma": {
                    "type": "number",
                    "example": 2
                  },
                  "avatar": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://res.cloudinary.com/dztvd7emk/image/upload/v1722795504/xxkv5fjuoqma9hsn7qbc.jpg"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "user@example.com"
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "gender": {
                          "type": "string",
                          "enum": [
                            "male",
                            "female"
                          ],
                          "example": "male"
                        },
                        "weight": {
                          "type": "number",
                          "example": 75
                        },
                        "dailyTimeActivity": {
                          "type": "number",
                          "example": 60
                        },
                        "dailyNorma": {
                          "type": "number",
                          "example": 2
                        },
                        "avatar": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://res.cloudinary.com/dztvd7emk/image/upload/v1722795504/xxkv5fjuoqma9hsn7qbc.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/water/add-water": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Add Water Consumption",
        "operationId": "addWater",
        "description": "Add a new entry for water consumption.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "amount"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-08-04T10:00:00Z"
                  },
                  "amount": {
                    "type": "number",
                    "example": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Water consumption added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully added water consumption!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "64e8b1c9e50f3f1234567890"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-08-04T10:00:00Z"
                        },
                        "amount": {
                          "type": "number",
                          "example": 500
                        },
                        "userId": {
                          "type": "string",
                          "example": "64e8b1c9e50f3f1234567890"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/water/delete-water/{id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Delete Water Consumption",
        "operationId": "deleteWater",
        "description": "Delete an existing entry for water consumption.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64e8b1c9e50f3f1234567890"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Water consumption deleted successfully."
          },
          "404": {
            "description": "Entry not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/water/update-water/{id}": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Update Water Consumption",
        "operationId": "updateWater",
        "description": "Update an existing entry for water consumption.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64e8b1c9e50f3f1234567890"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-08-04T10:00:00Z"
                  },
                  "amount": {
                    "type": "number",
                    "example": 600
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water consumption updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated amount of water!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "64e8b1c9e50f3f1234567890"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-08-04T10:00:00Z"
                        },
                        "amount": {
                          "type": "number",
                          "example": 600
                        },
                        "userId": {
                          "type": "string",
                          "example": "64e8b1c9e50f3f1234567890"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Entry not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/water/daily-water": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Get Daily Water Consumption",
        "operationId": "dailyWater",
        "description": "Retrieve daily water consumption data for the user.",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "The date for which to retrieve daily water consumption data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-08-04T00:00:00Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved daily water consumption.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved daily water consumption!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "64e8b1c9e50f3f1234567890"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-08-04T10:00:00Z"
                          },
                          "amount": {
                            "type": "number",
                            "example": 500
                          },
                          "userId": {
                            "type": "string",
                            "example": "64e8b1c9e50f3f1234567890"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Date is required."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/water/monthly-water": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Get Monthly Water Consumption",
        "operationId": "monthlyWater",
        "description": "Retrieve monthly water consumption data for the user.",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "The date for the month to retrieve water consumption data.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-08-01T00:00:00Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved monthly water consumption.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved monthly water consumption!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "64e8b1c9e50f3f1234567890"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-08-04T10:00:00Z"
                          },
                          "amount": {
                            "type": "number",
                            "example": 1500
                          },
                          "userId": {
                            "type": "string",
                            "example": "64e8b1c9e50f3f1234567890"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Date is required."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "description": "User's email address",
            "type": "string",
            "format": "email",
            "example": "alexboo@ukr.net"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "Alex Boo"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "female"
          },
          "weight": {
            "description": "User's weight in kilograms",
            "type": "number",
            "example": 75
          },
          "dailyTimeActivity": {
            "description": "User's daily time activity in minutes",
            "type": "number",
            "example": 45
          },
          "dailyNorma": {
            "description": "User's daily water intake norm in liters",
            "type": "number",
            "example": 1.8
          },
          "avatar": {
            "description": "URL to the user's avatar image",
            "type": "string",
            "format": "uri",
            "example": "https://res.cloudinary.com/dztvd7emk/image/upload/v1722795504/xxkv5fjuoqma9hsn7qbc.jpg"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "date",
          "amount",
          "userId"
        ],
        "properties": {
          "date": {
            "description": "Date when the water entry was created",
            "type": "string",
            "format": "date-time",
            "example": "2024-08-05T12:00:00Z"
          },
          "amount": {
            "description": "Amount of water consumed",
            "type": "number",
            "example": 500
          },
          "userId": {
            "description": "ID of the user associated with this water entry",
            "type": "string",
            "format": "uuid",
            "example": "60d0fe4f5311236168a109ca"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      }
    }
  }
}
